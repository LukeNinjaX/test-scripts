import { ASTType } from './utils';
export type StorageItem = {
    astId: number;
    contract: string;
    label: string;
    offset: number;
    slot: string;
    type: string;
};
export type StorageType = {
    encoding: string;
    label: string;
    numberOfBytes: string;
    members?: StorageItem[];
    key?: string;
    value?: string;
    base?: string;
};
export type StorageLayout = {
    storage: StorageItem[];
    types: Record<string, StorageType>;
};
export default class Generator {
    private readonly layoutPath;
    private readonly tsPath;
    private readonly endBracket;
    private readonly storageLayout;
    private readonly imports;
    constructor(layoutPath: string, tsPath: string);
    getStorage(): StorageLayout;
    getLayoutJson(): string;
    append(str: string): boolean;
    write(str: string): boolean;
    getNameSpace(): string;
    parseType(typeName: string): ASTType;
    generate(): void;
}
