import { AspectStateReadonly, StaticCallable } from '@artela/aspect-libs/common';
import { AspectProperty, ImmutableAspectState, StaticCaller } from '@artela/aspect-libs/components';
import { EthTransaction } from '@artela/aspect-libs/proto';

export class FilterTxCtx implements AspectStateReadonly, StaticCallable {
  private readonly _tx: EthTransaction;
  constructor(tx: EthTransaction) {
    this._tx = tx;
  }

  get tx(): EthTransaction {
    return this._tx;
  }

  get property(): AspectProperty {
    return AspectProperty.instance();
  }

  get readonlyState(): ImmutableAspectState {
    return ImmutableAspectState.instance(this);
  }

  get staticCall(): StaticCaller {
    return StaticCaller.instance(this);
  }

  __readonlyAspectStateImplemented(): void { }

  __staticCallableImplemented(): void { }
}
