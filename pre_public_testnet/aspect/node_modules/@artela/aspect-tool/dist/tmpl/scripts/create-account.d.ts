export declare const CreateAccountTmpl = "\n\"use strict\"\n\n// import required libs\nconst fs = require('fs');\nconst path = require('path');\nconst Web3 = require(\"@artela/web3\");\nvar argv = require('yargs')\n    .string('skfile')\n    .argv;\n\n\nasync function create() {\n\n    const configJson = JSON.parse(fs.readFileSync('./project.config.json', \"utf-8\").toString());\n    // init connection to Artela node\n    let node = (argv.node)?String(argv.node):configJson.node;\n    if(!node){\n        console.log(\"'node' cannot be empty, please set by the parameter or artela.config.json\")\n        process.exit(0)\n    }\n    const web3 = new Web3(node);\n\n    let privateFile = 'privateKey.txt'; // <-- your private key here, if not exist, create new one\n    if(argv.skfile){\n        privateFile=argv.skfile;\n    }\n    let account;\n    if (fs.existsSync(privateFile)) {\n        let pk = fs.readFileSync(privateFile, 'utf-8');\n        account = web3.atl.accounts.privateKeyToAccount(pk.trim());\n    } else {\n        account = web3.atl.accounts.create();\n        const dirPath = path.dirname(privateFile);\n        if (!fs.existsSync(dirPath)) {\n            fs.mkdirSync(dirPath, { recursive: true });\n        }\n        fs.writeFileSync(privateFile, account.privateKey);\n    }\n\n    // add account to wallet\n    web3.atl.accounts.wallet.add(account.privateKey);\n    console.log(\"address: \", account.address);\n}\n\ncreate().then();\n";
