export declare const ContractCallTmpl = "\n\"use strict\"\n\n// import required libs\nconst fs = require('fs');\nconst Web3 = require('@artela/web3');\nvar argv = require('yargs')\n    .string('node')\n    .string('pkfile')\n    .string('args')\n    .string('contract')\n    .string('method')\n    .string('abi')\n    .argv;\n\n\nasync function call() {\n    // init connection to Artela node\n    const configJson = JSON.parse(fs.readFileSync('./project.config.json', \"utf-8\").toString());\n    let node = (argv.node)?String(argv.node):configJson.node;\n    if(!node){\n        console.log(\"'node' cannot be empty, please set by the parameter or artela.config.json\")\n        process.exit(0)\n    }\n    const web3 = new Web3(node);\n\n    //--pkfile ./build/privateKey.txt\n    let senderPriKey = String(argv.pkfile)\n    if (!senderPriKey || senderPriKey === 'undefined') {\n        senderPriKey = \"privateKey.txt\"\n    }\n    if (!fs.existsSync(senderPriKey)) {\n        console.log(\"'account' cannot be empty, please set by the parameter ' --pkfile ./build/privateKey.txt'\")\n        process.exit(0)\n    }\n    let pk = fs.readFileSync(senderPriKey, 'utf-8');\n    let sender = web3.eth.accounts.privateKeyToAccount(pk.trim());\n    console.log(\"from address: \", sender.address);\n    web3.eth.accounts.wallet.add(sender.privateKey);\n\n\n    // --contract 0x9999999999999999999999999999999999999999\n    const contractAddr = argv.contract;\n    if(!contractAddr){\n        console.log(\"'contract address' cannot be empty, please set by the parameter ' --contract 0x9999999999999999999999999999999999999999'\")\n        process.exit(0)\n    }\n\n    // --abi xxx/xxx.abi\n    const abiPath = String(argv.abi)\n    let abi = null\n    if (abiPath && abiPath !== 'undefined') {\n        abi = JSON.parse(fs.readFileSync(abiPath, \"utf-8\").toString());\n    } else {\n        console.log(\"'abi' cannot be empty, please set by the parameter' --abi xxx/xxx.abi'\")\n        process.exit(0)\n    }\n    // --args [55]\n    const inputs = argv.args;\n    let parameters=[];\n    if(inputs && inputs!=='undefined') {\n        parameters = JSON.parse(inputs);\n    }\n    //--method count\n    const method = argv.method;\n    if(!method || method==='undefined') {\n        console.log(\"'method' cannot be empty, please set by the parameter ' --method {method-name}'\")\n        process.exit(0)\n    }\n\n    let storageInstance = new web3.eth.Contract(abi, contractAddr);\n    let instance = await storageInstance.methods[method](...parameters).call();\n    console.log(\"==== reuslt===\" + instance);\n}\n\ncall().then();\n";
